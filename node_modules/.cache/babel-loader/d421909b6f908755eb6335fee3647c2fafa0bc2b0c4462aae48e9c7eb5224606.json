{"ast":null,"code":"var _jsxFileName = \"/home/komal/Chatterbox/src/components/Input.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport ImageIcon from '@mui/icons-material/Image';\nimport { ChatContext } from '../context/ChatContext';\nimport { AuthContext } from '../context/authContext';\nimport { db, storage } from \"../firebase\";\nimport { updateDoc, doc, arrayUnion, Timestamp, serverTimestamp } from 'firebase/firestore';\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Input() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const [messages, setMessages] = useState();\n  const {\n    data\n  } = useContext(ChatContext);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      uploadTask.on(error => {\n        // setErr(true);\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n    await updateDoc(doc(db, \"userChat\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp\n    });\n    setText(\"\");\n    setImg(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type something...\",\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.file[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Input, \"kIBxLha0GRCJ6fgbYXFEWYbWvIM=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useContext","useState","AttachFileIcon","ImageIcon","ChatContext","AuthContext","db","storage","updateDoc","doc","arrayUnion","Timestamp","serverTimestamp","ref","uploadBytesResumable","getDownloadURL","v4","uuid","jsxDEV","_jsxDEV","Input","_s","text","setText","img","setImg","messages","setMessages","data","currentUser","handleSend","storageRef","uploadTask","on","error","snapshot","then","downloadURL","chatId","id","senderId","uid","date","now","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","style","display","file","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/home/komal/Chatterbox/src/components/Input.jsx"],"sourcesContent":["import React, {useContext, useState} from 'react'\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport ImageIcon from '@mui/icons-material/Image';\nimport { ChatContext } from '../context/ChatContext';\nimport { AuthContext } from '../context/authContext';\nimport {db, storage} from \"../firebase\"\nimport { updateDoc,doc, arrayUnion, Timestamp, serverTimestamp } from 'firebase/firestore';\nimport { ref, uploadBytesResumable,getDownloadURL } from \"firebase/storage\";\nimport {v4 as uuid} from \"uuid\";\n\nfunction Input() {\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const [messages, setMessages] = useState()\n  const {data} = useContext(ChatContext); \n  const {currentUser} = useContext(AuthContext)\n\n  const handleSend =async()=>{\n    if(img){   \n    const storageRef = ref(storage, uuid());\n    const uploadTask = uploadBytesResumable(storageRef, img);\n\n    uploadTask.on(\n      (error) => {\n        // setErr(true);\n      }, \n    () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(async(downloadURL) => {\n        await updateDoc(doc(db, \"chats\", data.chatId),{\n          messages : arrayUnion({\n            id: uuid(),\n            text,\n            senderId: currentUser.uid,\n            date: Timestamp.now(),\n            img: downloadURL,\n          }),\n        });\n        });\n      }\n    );\n\n    }else{\n  await updateDoc(doc(db, \"chats\", data.chatId),{\n    messages : arrayUnion({\n      id: uuid(),\n      text,\n      senderId: currentUser.uid,\n      date: Timestamp.now(),\n      \n    }),\n  });\n    }\n  await updateDoc(doc(db, \"userChat\" , currentUser.uid),{\n    [data.chatId + \".lastMessage\"]:{\n      text\n    },\n    [data.chatId + \".date\"] : serverTimestamp\n  })\n\n  setText(\"\")\n  setImg(null)\n  };\n  return (\n    <div className='input'>\n        <input type=\"text\" placeholder='Type something...' onChange={e=>setText(e.target.value)}/>\n       <div className=\"send\">\n       <AttachFileIcon/>\n        <input type=\"file\" style={{display: \"none\"}} id =\"file\" onChange={e=>setImg(e.target.file[0])}/>\n        <label htmlFor=\"file\">\n        <ImageIcon/>\n        </label>\n        <button onClick={handleSend}>Send</button>\n       </div>\n    </div>\n  )\n}\n\nexport default Input"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}