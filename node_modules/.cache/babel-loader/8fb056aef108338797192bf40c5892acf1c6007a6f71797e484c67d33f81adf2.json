{"ast":null,"code":"var _jsxFileName = \"/home/komal/Chatterbox/src/components/Messages.jsx\",\n  _s = $RefreshSig$();\n// import React,{useContext, useEffect, useState} from 'react'\n// import Message from './Message'\n// import { ChatContext } from '../context/ChatContext';\n// import { onSnapshot,doc } from 'firebase/firestore';\n// import {db} from \"../firebase\"\n\n// const Messages = () => {\n//   const [messages, setMessages] = useState()\n//   const {data} = useContext(ChatContext); \n\n//   useEffect(()=>{\n//   const unSub = onSnapshot(doc(db, \"chats\", data.chatId),(doc)=>{\n//     doc.exists() && setMessages(doc.data().messages)\n//     })\n//     return ()=>{\n//     unSub()\n//     }\n//   },[data.chatId]);\n//   console.log(messages);\n\n//   return (\n//     <div className='messages'>\n//      {messages.map((m) => (\n//         <Message message={m} key={m.id} />\n//       ))}\n//     </div>\n\n//   );\n// };\n\n// export default Messages\n\nimport { doc, onSnapshot } from \"firebase/firestore\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const {\n    data\n  } = useContext(ChatContext);\n  useEffect(() => {\n    const unSub = onSnapshot(doc(db, \"chats\", data.chatId), doc => {\n      doc.exists() && setMessages(doc.data().messages);\n    });\n    return () => {\n      unSub();\n    };\n  }, [data.chatId]);\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n      message: m\n    }, m.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"0pwvwOYisb4XNxM7V+dVFb3ipHo=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["doc","onSnapshot","React","useContext","useEffect","useState","ChatContext","db","Message","jsxDEV","_jsxDEV","Messages","_s","messages","setMessages","data","unSub","chatId","exists","console","log","className","children","map","m","message","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/komal/Chatterbox/src/components/Messages.jsx"],"sourcesContent":["// import React,{useContext, useEffect, useState} from 'react'\n// import Message from './Message'\n// import { ChatContext } from '../context/ChatContext';\n// import { onSnapshot,doc } from 'firebase/firestore';\n// import {db} from \"../firebase\"\n\n// const Messages = () => {\n//   const [messages, setMessages] = useState()\n//   const {data} = useContext(ChatContext); \n\n//   useEffect(()=>{\n//   const unSub = onSnapshot(doc(db, \"chats\", data.chatId),(doc)=>{\n//     doc.exists() && setMessages(doc.data().messages)\n//     })\n//     return ()=>{\n//     unSub()\n//     }\n//   },[data.chatId]);\n//   console.log(messages);\n\n//   return (\n//     <div className='messages'>\n//      {messages.map((m) => (\n//         <Message message={m} key={m.id} />\n//       ))}\n//     </div>\n    \n//   );\n// };\n\n// export default Messages\n\nimport { doc, onSnapshot } from \"firebase/firestore\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\n\nconst Messages = () => {\n  const [messages, setMessages] = useState([]);\n  const { data } = useContext(ChatContext);\n\n  useEffect(() => {\n    const unSub = onSnapshot(doc(db, \"chats\", data.chatId), (doc) => {\n      doc.exists() && setMessages(doc.data().messages);\n    });\n\n    return () => {\n      unSub();\n    };\n  }, [data.chatId]);\n\n  console.log(messages)\n\n  return (\n    <div className=\"messages\">\n      {messages.map((m) => (\n        <Message message={m} key={m.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default Messages;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,SAASA,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AACpD,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,EAAE,QAAQ,aAAa;AAChC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEU;EAAK,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EAExCF,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGf,UAAU,CAACD,GAAG,CAACO,EAAE,EAAE,OAAO,EAAEQ,IAAI,CAACE,MAAM,CAAC,EAAGjB,GAAG,IAAK;MAC/DA,GAAG,CAACkB,MAAM,EAAE,IAAIJ,WAAW,CAACd,GAAG,CAACe,IAAI,EAAE,CAACF,QAAQ,CAAC;IAClD,CAAC,CAAC;IAEF,OAAO,MAAM;MACXG,KAAK,EAAE;IACT,CAAC;EACH,CAAC,EAAE,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC;EAEjBE,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EAErB,oBACEH,OAAA;IAAKW,SAAS,EAAC,UAAU;IAAAC,QAAA,EACtBT,QAAQ,CAACU,GAAG,CAAEC,CAAC,iBACdd,OAAA,CAACF,OAAO;MAACiB,OAAO,EAAED;IAAE,GAAMA,CAAC,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAClB,EAAA,CAvBID,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}