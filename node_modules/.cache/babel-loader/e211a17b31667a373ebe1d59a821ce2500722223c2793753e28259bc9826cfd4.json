{"ast":null,"code":"var _jsxFileName = \"/home/komal/Chatterbox/src/context/ChatContext.js\",\n  _s = $RefreshSig$();\nimport { useContext, useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport { AuthContext } from \"./authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const INITIAL_STATE = {\n    chatID: \"null\",\n    user: {}\n  };\n  const chatReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE_USER\":\n        return {\n          user: action.payload,\n          chatId: currentUser.uid > action.payload.uid ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid\n        };\n      default:\n        return state;\n    }\n  };\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      data: state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 4\n  }, this);\n};\n_s(ChatContextProvider, \"oxNZJ0VeS14VTXMH/cW6nlJfor8=\");\n_c = ChatContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"names":["useContext","useReducer","createContext","AuthContext","jsxDEV","_jsxDEV","ChatContext","ChatContextProvider","_ref","_s","children","currentUser","INITIAL_STATE","chatID","user","chatReducer","state","action","type","payload","chatId","uid","dispatch","Provider","value","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/komal/Chatterbox/src/context/ChatContext.js"],"sourcesContent":["import { useContext, useReducer } from \"react\";\nimport { createContext} from \"react\";\nimport { AuthContext } from \"./authContext\";\n\n\nexport const ChatContext = createContext();\n\nexport const ChatContextProvider = ({children}) =>{\n    const {currentUser} = useContext(AuthContext);\nconst INITIAL_STATE = {\n    chatID : \"null\",\n    user : {},\n};\nconst chatReducer = (state,action)=>{\n    switch(action.type){\n        case \"CHANGE_USER\":\n            return {\n            user: action.payload,\n            chatId: \n            currentUser.uid > action.payload.uid \n                    ? currentUser.uid + action.payload.uid \n                    : action.payload.uid + currentUser.uid\n            \n            };\n            default:\n            return state;\n    }\n};\nconst [state,dispatch] = useReducer(chatReducer, INITIAL_STATE);\nreturn ( \n   <ChatContext.Provider value ={{data:state, dispatch}}>\n        {children}\n    </ChatContext.Provider>\n);\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAC9C,SAASC,aAAa,QAAO,OAAO;AACpC,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAE;AAE1C,OAAO,MAAMK,mBAAmB,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC1C,MAAM;IAACG;EAAW,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EACjD,MAAMS,aAAa,GAAG;IAClBC,MAAM,EAAG,MAAM;IACfC,IAAI,EAAG,CAAC;EACZ,CAAC;EACD,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAACC,MAAM,KAAG;IAChC,QAAOA,MAAM,CAACC,IAAI;MACd,KAAK,aAAa;QACd,OAAO;UACPJ,IAAI,EAAEG,MAAM,CAACE,OAAO;UACpBC,MAAM,EACNT,WAAW,CAACU,GAAG,GAAGJ,MAAM,CAACE,OAAO,CAACE,GAAG,GAC1BV,WAAW,CAACU,GAAG,GAAGJ,MAAM,CAACE,OAAO,CAACE,GAAG,GACpCJ,MAAM,CAACE,OAAO,CAACE,GAAG,GAAGV,WAAW,CAACU;QAE3C,CAAC;MACD;QACA,OAAOL,KAAK;IAAC;EAEzB,CAAC;EACD,MAAM,CAACA,KAAK,EAACM,QAAQ,CAAC,GAAGrB,UAAU,CAACc,WAAW,EAAEH,aAAa,CAAC;EAC/D,oBACGP,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAG;MAACC,IAAI,EAACT,KAAK;MAAEM;IAAQ,CAAE;IAAAZ,QAAA,EAC/CA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAE3B,CAAC;AAAApB,EAAA,CA3BYF,mBAAmB;AAAAuB,EAAA,GAAnBvB,mBAAmB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}